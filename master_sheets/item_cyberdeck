

   asset: cyberdeck. proceed with configuration? [y/N]

 ==============================================================================  

   FAST-TRACK:

   tl;dr go to /etc/cyberdeck/config and copy the default cyberdeck_block
   configuration for a deck of Quality equal to your crew's Tier (or Tier+1
   if your playbook and/or background give you access to Fine cyberdecks). 
   
   paste it under "assets" in the Load_&_Items sheet of your character file.

   the Admin will tell you if you should copy a different Quality deck config 
   for whatever reason (e.g. as a result of an acquire(2) command).

   Or, read on to build a custom cyberdeck to your specifications. 

 ==============================================================================

   $ tree
   .
   ├── what is a cyberdeck?
   ├── configuring a cyberdeck
   │   ├── 1. quality
   │   ├── 2. load/form
   │   ├── 3. manufacturer
   │   ├── 4. flaws   
   │   ├── 5. spend DOP pool
   │   └── 6. name and look
   ├── upgrading a cyberdeck
   └── blank cyberdeck asset block

 ==============================================================================

   WHAT IS A CYBERDECK?

   cyberdeck synopsis:
   ├── allows Fasthacks (if you have the relevant Special Ability)
   ├── runs Daemons/Programs
   ├── contributes base Time On Target
   └── provides an air-gapped interface with foreign cybersystems


   background

   cyberdecks are the way terminal_IV characters interact with cybersystems.
   
   the thing that differentiates a cyberdeck from a regular personal computer
   is that cyberdecks are kitted out to hack systems and avoid detection.

   hackers are extremely cautious about bridging the gap between their 
   internal/"onboard" and external/"foreign" cybersystems. plugging your
   body's I/O ports into a network you don't control is inviting trouble.

   since you operate your cyberdeck via its keyboard interface, your internal
   system is air-gapped from the system you're interacting with, mitigating 
   the risk of your internals being compromised.

   the tradeoff is that the speed at which you can type limits the speed of 
   your hack's progress. to compensate, hackers have developed specialised 
   keyboards to allow rapid coding by "chording". others judge that a huge
   decrease in life expectancy is worth it for the power of hacking at the
   speed of thought, and dispense with air-gapping protections to use neural
   implant "deck-on-a-chip"-style decks anyway. 

   cyberdecks are usually (but not always) portable devices, and are often 
   worn on a shoulder strap for use during action. it's common for keys to be 
   placed on a telescoping "neck" to allow a guitar-like grip when on the 
   move, which collapses down to behave more like a laptop when mobility
   isn't required.


   cyberdeck functions

   Time On Target
   ToT represents the amount of time a cyberdeck's anti-detection 
   countermeasures can keep your activity concealed. the more base ToT a deck
   contributes, the more you'll be able to accomplish in a cybersystem before 
   you're compromised; see the breach(1) command for more info.

   Daemons and Programs
   Daemons are passive, "always-on" abilities granted by your cyberdeck. 
   Programs are abilities that can be triggered to complete a defined
   function. you can have any number of Deamons and Programs installed (see
   the make(2) command), but your cyberdeck can only run a set number of
   them between uses of the maintain(2) command.

      You can have a number of active Daemons equal to the number of unlocked  
      Daemon slots on your cyberdeck. You can swap Daemons in and out of 
      slots at will.

      To run a program, mark an unlocked Program slot. That slot cannot be
      reused until you reset your deck with a maintain(2) command. 
   
   Edges and Flaws
   Edges and Flaws describe fictional strengths and weaknesses of your 
   cyberdeck. They come into play when considering position/effect and
   consequences of action rolls.

   Overclock
   Overclock is like Trauma but for your equipment. When you run out of ToT
   while on an op against a dangerous target without smoothly disconnecting,
   or otherwise push your deck beyond what it's capable of handling, bad
   things happen. Permenantly fill one segment of the Overclock clock, and 
   take a Flaw (examples in the issues box). The Flaw is active until you 
   take steps to address it. On your fourth Overclock, the deck is bricked
   and will never function again. 

 ==============================================================================
 CONFIGURING A CYBERDECK
 ==============================================================================

   copy the blank cyberdeck_block at the end of this file and paste it under
   "assets" in the Load_&_items sheet of your character file. Then follow
   these steps:
 
 ==============================================================================                                      
   
   1. QUALITY - determine initial Decking Out Points pool

   cyberdecks, like all items/assets, have a Quality - a measure of the
   deck's value. Quality is a useful tool for comparing the capabilities of
   items/assets - see the act(1) and breach(1) commands. 

   the Quality of the deck you're building depends on how you're getting it 
   in the fiction: 

      Source                                                      Quality
      mark load to get the kind of deck your crew can access.........Tier 
      above, but your playbook/background gets Fine decks..........Tier+1
      acquire(2) command......................................roll result
      acquired from a Legend................................Legend's Tier
      any other source................................Admin will tell you

   the higher the Quality of the deck you're building, the more Decking Out
   Points (DOPs) you get to spend on it. DOPs can be spent to unlock Daemon
   and Program slots, increase a deck's base Time On Target, purchase Edges,
   or remove Flaws.

      Quality                                                Initial DOPs
      0 - poor..........................................................6
      1 - adequate......................................................7
      2 - good..........................................................8
      3 - excellent.....................................................9
      4 - superior.....................................................10
      5 - impeccable...................................................11
      6 - legendary....................................................12
   
   a deck's Quality represents its current value; a deck which is in pristine
   condition or which has been extensively emhanced will be much higher 
   Quality than an old, battered deck of the same model.

   record the deck's Quality on the graphic on the cyberdeck_block.

   you can tally your current DOP total as you go along here: --> 

 ==============================================================================                                   

   2. LOAD/FORM - choose a deck form factor

   larger decks get more DOPs to allocate since they outperform smaller
   decks at a given Quality/price point. this is because:
   - larger decks can fit more hardware 
   - miniaturising components to fit into a smaller form factor is expensive
   - cooling a large deck is easier, avoiding thermal throttling/overheating

   the tradeoff of the larger form-factor is that heavy battle decks are
   harder to conceal and lug around.
                                                                         
      Form Factor            Load          ΔDOPs              Edges/Flaws
      deck-on-a-chip...........0............-2..................--implant
      light....................1............-2...................--covert
      normal...................2.............0........................N/A
      heavy (battle deck)......3............+2.....--heavy, --conspicuous
      station.................N/A...........+4...................--static

   you can only make use of an --implant cyberdeck if you're building
   this deck to get it chipped as a piece of cyberware (see chip(2))

   record the deck's Load/Form on the graphic on the cyberdeck_block, make a
   note of any Edges/Flaws you gained, and update your DOP tally. 

 ==============================================================================

   3. MANUFACTURER - get Edges/Flaws to reflect corporate reputations

   pick a manufacturer and add the Edges/Flaws that represent their 
   corporate brand identity:

   Celer8 --lightweight --budget (see step 4)
   Circle --luxe
   DekBloks --modular-repair 
   Delphi --intrusion-hardened
   Mens/Materia --lightning-fast
   ThinkDeck --ruggedised
   Yamaha --quiet --energy-efficient
   need to expand/improve this list!! more international-sounding corps

   or get with the Admin to create a custom corporation.
   
   non-corporate options:

   scratch-built/DIY --private but --unreliable
   add --free-software to replace proprietary operating systems with your own
   free substitute, but also take --untested-OS as a consequence of opting
   out of corporate convenience

   mote down your manufacturer and any new Edges. 
   
 ==============================================================================  

   4. FLAWS - take Flaws for extra DOPs

   you can take the following three Edges for free, which give you +1DOP to
   assign at the cost of accepting an extra Flaw:

   --second-hand: it was higher Quality when new-in-box, but you've acquired
                  it past its prime. 
		  +1DOP but +1 Flaw e.g. --beaten-up, --damaged(screen) 

   --budget:      it has high-end specs for its Quality, but corners have
                  been cut to keep the price down. 
		  +1DOP but +1 Flaw e.g. --unreliable, under-cooled

   --discounted:  EITHER a design flaw was overlooked when this deck was in
                  development, so it's available discounted, OR the deck is
		  sold for cheaper than it could be because the manufacturer
		  is treating you the customer as a revenue stream.
		  +1DOP but +1 Flaw e.g. --bottlenecked, --adware

   these Edges stack and can be taken multiple times (e.g. your deck is 
   Quality 1, but this model would be Quality 3 in factory condition; mark 
   the Edge "--second-hand", and then add 2DOPs to your tally in exchange for 
   2 extra Flaws. the deck now has specs like a Quality 3 deck, but in return
   it has at least two things Wrong With It.

   example flaws:

   --adware                      --forced-updates             --static
   --beaten-up                   --hard-to-repair             --under-cooled   
   --bottlenecked                --heavy                      --unreliable
   --conspicuous                 --locked-down                --unsafe 
   --damaged(component)          --loud                       --vulnerable
   --data-selling                --slow

   note down any new Edges/Flaws you've picked up and update your DOP tally.
   
 ==============================================================================

   5. SPEND DOP POOL

   spend the DOPs you've tallied up 1-for-1 to buy Base ToT, Daemon slots,
   Program slots and Edges.

   example: a Quality 1 deck (7 DOPs):

   specs: normal form, 2-Load, 2 Deamon slots, 1 Program slot, 4 Base ToT

              ┌──────────────────────────────────────────────────┐           
              │┌┐tot-top┌───────────────────────────────────────┐│
              ││                                                ││
              ││ 10  9   8   7   6   5  *4   3   2   1   0 tens ││
              ││ │   │   │   │   │   │   │===│===│===│===│  [ ] ││
              ││                                                ││
              ││ form: normal     ToT remaining       *base ToT ││
              ││                                                ││
              ││ ┌───┐ ⡄⣆  ⡀⣧⢀    ⡄⣦⢀⣆  ⡀⣠⣷  ⢠ ⡀  ⡄⣦⢀   ⡄ ┌───┐ ││
              ││ │ 2 │ ⣿⣿⣆⣠⣷⣿⣿⣄⣰⣀⣴⣧⣿⣸⣿⣄⣆⣿⣿⣿⣧⣰⣿⣠⣿⣄⣾⣿⣿⣿⣠⣧⣸⣿ │ 1 │ ││
              ││ └───┘ ⣿⣿⠏⠙⡿⣿⣿⠋⠹⠉⠻⡟⣿⢹⣿⠋⠏⣿⣿⣿⡟⠹⣿⠙⣿⠋⢿⣿⣿⣿⠙⡟⢹⣿ └───┘ ││
              ││ load. ⠃⠏  ⠁⡟⠈    ⠃⠟⠈⠏  ⠁⠙⡿  ⠘ ⠁  ⠃⠟⠈   ⠃ qual. ││
      ________│└────────────────────────────────────────────────┘│
     │`".     └────────────────────[________]────────────────────┘ \
      `". `    _daemons_______________    ______________programs_   \
         `/   _1___2___3___4___5___6_      _1___2___3___4___5___6_   \
        /""" /UL//UL//  //  //  //  /      \UL\\  \\  \\  \\  \\  \   \
       / <  /__//__//__//__//__//__/   ()   \__\\__\\__\\__\\__\\__\   \
      /__  /x //  //  //  //  //  /          \x \\  \\  \\  \\  \\  \   \ 
      /   /__//__//__//__//__//__/ ___....___ \__\\__\\__\\__\\__\\__\   \
     /                            /___\__/___\                            \
    /______________________________________________________________________\
    │ IMB                                                        ThinkDeck │
    └──────────────────────────────────────────────────────────────────────┘
     
   you can write your deck's manufacturer/model/name on the base if you like!
     
   "UL" on the upper key of a Daemon/Program slot shows it's unlocked; mark 
   an "x" on the lower key during play to show a Program slot has been used
   or a Daemon slot is currently in use. 

 ==============================================================================

   6. NAME AND LOOK - details and cosmetics

   give your cyberdeck a model name (and if it's one you care about, an
   iconic name too).
   
   e.g: the IMB ThinkDeck 7001c "Thread Dancer". Tried and tested ThinkDeck          
            └───────────┘ └───┘ └─────────────┘  construction: perfect for
             manufacturer model   iconic name    macrogravity environments
   
   pick some entries from this list for the deck's Look, or import your own:

   --bent_antennae             --greebles                  --RGB-everywhere
   --blinkenlights             --guitar-strap              --scratched-up
   --clicky-switches           --holographic-display          -screen
   --dials/gauges-up-to-11     --intake-grilles            --spotless-brushed 
   --duct_tape                 --I/O ports                    -aluminium
   --fold-out-keyboard         --messy-cable-management    --spray-paint

   write down details of any stickers/decals you've got on your deck, and
   you're done!!

 ==============================================================================
 UPGRADING A CYBERDECK
 ==============================================================================

   cyberdecks can be improved through the upgrade(2) command during downtime 
   to increase their Quality. 

   your Assets do not automatically scale up in Quality as you go up in Tier.
   unless you do something about it, that Quality 1 cyberdeck you've had with 
   you right from the start of the game will stay Quality 1, even as you 
   level up. while you can always just buy a new deck more suitable for a
   hacker of your status, this deck's *yours* - the upgrade(2) command lets 
   it stay relevant.

   upgrading lets you make any improvement to your deck worth 1 DOP (see step
   5 below: +1ToT, +1 Daemon/Program slot, +1Edge) OR gain some other 
   fictional benefit.

   Examples:

   hardware killswitch: if a breach op goes bad, make an Interface action
   roll to disconnect cleanly, even if you have 0 ToT remaining.

   integration rail: mount a weapon (e.g. a handgun, grenade launcher) to
   your deck (increase Load accordingly)

   COMPANY NAME SOFTWARE: high-end proprietary ICE package; gain 
   --intrusion-hardened, but are there backdoors?

   oversized radiators: strike --under-cooled if you have it; otherwise gain
   --overheat-attack-resistance vs hostile netrunners

   stealth fans: strike --loud if you have it; otherwise gain --silent; your
   deck can run full blast without giving you away

   DDR12 RAM upgrade: +1 Daemon or Program slot 

 ==============================================================================
 ASSET: CYBERWARE_BLOCK
 ==============================================================================

   insert under "assets" on the Load_&_Items sheet 

   to attach this block to a cyberware block, cut above the "synopsis" line


│ ┌─asset unique identifier goes here────────────────────────────────────────┐ │
│ ├──────────────────┬───────────────────────────────────────────────────────┤ │
│ │   manufacturer   │                                                       │ │
│ ├──────────────────┼───────────────────────────────────────────────────────┤ │
│ │   model          │                                                       │ │
│ │                  │                                                       │ │
│ ├──────────────────┼───────────────────────────────────────────────────────┤ │
│ │   iconic name    │                                                       │ │
│ ├──────────────────┼───────────────────────────────────────────────────────┤ │
│ │   look           │                                                       │ │
│ │                  │                                                       │ │
│ ├──────────────────┴──────────────────┬────────────────────────────────────┤ │
│ │   edges:                            │   flaws:                           │ │
│ │                                     │                                    │ │
│ │                                     │                                    │ │
│ │                                     │                                    │ │
│ │                                     │                                    │ │
│ ├─────────────────────────────────────┴────────────────────────────────────┤ │
│ ├─synopsis──────────────────────┬─overclock─────────────┬─issues───────────┤ │
│ │                               │                       │                  │ │
│ │   cyberdeck:                  │      .-"``":`"-.      │  --compromised   │ │
│ │   ├── allows Fasthacks        │    .`    4  ".  `.    │  --corrupted     │ │
│ │   ├── runs Daemons/Programs   │   / _.._      "   \   │  --fried         │ │
│ │   ├── contributes base ToT    │  :."    ".-. ." 1  :  │  --glitched      │ │
│ │   └── provides an air-gapped  │  :"     (   )     .:  │  --ransomlocked  │ │
│ │       interface with foreign  │  :  3  " "-"._  _.";  │  --stolen        │ │
│ │       cybersystems            │   \   "       ""  /   │  --traced        │ │
│ │                               │    `. ".   2    .'    │  --unsupported   │ │
│ │                               │       '-.:_..-'       │  --wiped         │ │
│ │                               │        bricked        │                  │ │
│ │                               │                       │                  │ │
│ ├───────────────────────────────┴───────────────────────┴──────────────────┤ │
│ │                                                                          │ │
│ │           ┌──────────────────────────────────────────────────┐           │ │
│ │           │┌┐tot-top┌───────────────────────────────────────┐│           │ │
│ │           ││                                                ││           │ │
│ │           ││ 10  9   8   7   6   5  *4   3   2   1   0 tens ││           │ │
│ │           ││ │   │   │   │   │   │   │===│===│===│===│  [ ] ││           │ │
│ │           ││                                                ││           │ │
│ │           ││ form: normal     ToT remaining       *base ToT ││           │ │
│ │           ││                                                ││           │ │
│ │           ││ ┌───┐ ⡄⣆  ⡀⣧⢀    ⡄⣦⢀⣆  ⡀⣠⣷  ⢠ ⡀  ⡄⣦⢀   ⡄ ┌───┐ ││           │ │
│ │           ││ │   │ ⣿⣿⣆⣠⣷⣿⣿⣄⣰⣀⣴⣧⣿⣸⣿⣄⣆⣿⣿⣿⣧⣰⣿⣠⣿⣄⣾⣿⣿⣿⣠⣧⣸⣿ │   │ ││           │ │
│ │           ││ └───┘ ⣿⣿⠏⠙⡿⣿⣿⠋⠹⠉⠻⡟⣿⢹⣿⠋⠏⣿⣿⣿⡟⠹⣿⠙⣿⠋⢿⣿⣿⣿⠙⡟⢹⣿ └───┘ ││           │ │
│ │           ││ load. ⠃⠏  ⠁⡟⠈    ⠃⠟⠈⠏  ⠁⠙⡿  ⠘ ⠁  ⠃⠟⠈   ⠃ qual. ││           │ │
│ │   ________│└────────────────────────────────────────────────┘│           │ │
│ │  │`".     └────────────────────[________]────────────────────┘ \         │ │
│ │   `". `    _daemons_______________    ______________programs_   \        │ │
│ │      `/   _1___2___3___4___5___6_      _1___2___3___4___5___6_   \       │ │
│ │     /""" /  //  //  //  //  //  /      \  \\  \\  \\  \\  \\  \   \      │ │
│ │    / <  /__//__//__//__//__//__/   ()   \__\\__\\__\\__\\__\\__\   \     │ │
│ │   /__  /  //  //  //  //  //  /          \  \\  \\  \\  \\  \\  \   \    │ │
│ │   /   /__//__//__//__//__//__/ ___....___ \__\\__\\__\\__\\__\\__\   \   │ │
│ │  /                            /___\__/___\                            \  │ │
│ │ /______________________________________________________________________\ │ │
│ │ │ IMB                                                        ThinkDeck │ │ │
│ │ └──────────────────────────────────────────────────────────────────────┘ │ │
│ │                                                                          │ │
│ ├─daemons──────────────────────────────────────────────────────────────────┤ │
│ │                                                                          │ │
│ │   Daemon name:                                             active: [ ]   │ │
│ │   synopsis:                                                              │ │
│ │                                                                          │ │
│ │                                                                          │ │
│ ├─programs─────────────────────────────────────────────────────────────────┤ │
│ │                                                                          │ │
│ │   Program name:                                                          │ │
│ │   synopsis:                                                              │ │
│ │                                                                          │ │
│ │                                                                          │ │
│ ├─upgrades─────────────────────────────────────────────────────────────────┤ │
│ │                                                                          │ │
│ │   Upgrade name:                                                          │ │
│ │   synopsis:                                                              │ │
│ │                                                                          │ │
│ │                                                                          │ │
│ │                                                                          │ │
│ └──────────────────────────────────────────────────────────────────────────┘ │
